# docker-compose.yml (fixed indentation – `env_file` is now at service level)

x-health: &default-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

services:
  # ───────────────────── MongoDB ─────────────────────
  mongo:
    image: mongo:7.0-jammy
    container_name: n8bn-blog-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-n8bn_blog}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./backend/src/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ping:1})' || exit 1"]
      <<: *default-healthcheck
      start_period: 40s

  # ───────────────────── Backend API ─────────────────────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: n8bn-blog-backend
    restart: unless-stopped
    env_file:                       # <- env vars (JWT_SECRET, etc.) injected here
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongo:27017/${MONGO_DATABASE:-n8bn_blog}?authSource=admin
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8080}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - backend_uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))"]
      <<: *default-healthcheck
      start_period: 40s

  # ───────────────────── Frontend (static) ─────────────────────
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: n8bn-blog-frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      API_URL: http://backend:3000/api
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health.html"]
      <<: *default-healthcheck

  # ───────────── Mongo Express (optional profile) ─────────────
  mongo-express:
    image: mongo-express:latest
    container_name: n8bn-blog-mongo-express
    restart: unless-stopped
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-admin123}
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - blog-network
    profiles:
      - admin

# ──────────────────────── Volumes & Networks ───────────────────────
volumes:
  mongo_data:
  mongo_config:
  backend_uploads:

networks:
  blog-network:
    driver: bridge
